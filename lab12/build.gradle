plugins {
	id 'java'
	id 'application'
}

repositories {
	jcenter()
}

dependencies {
	// jooby
	def joobyVer =  '2.8.4'
	implementation group: 'io.jooby', name: 'jooby', version: joobyVer
	implementation group: 'io.jooby', name: 'jooby-netty', version: joobyVer
	implementation group: 'io.jooby', name: 'jooby-gson', version: joobyVer
	implementation group: 'io.jooby', name: 'jooby-graphql', version: joobyVer
	implementation group: 'io.jooby', name: 'jooby-graphiql', version: joobyVer
//	implementation group: 'io.jooby', name: 'jooby-graphql-playground', version: joobyVer
	
	// logging
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	
	// guava
	implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'
}

task createMissingSourceDirs {
	group = "Source Directories"
	description = "Create all of the missing source directories for this project."
	doFirst {
		sourceSets.each { def sourceRoot ->
			sourceRoot.allSource.srcDirTrees.each { def sourceDir ->
				if(!sourceDir.dir.exists()) {
					println "Creating ${sourceDir}"
					mkdir sourceDir.dir
				}
			}
		}
	}
}
 
task deleteEmptySourceDirs {
	group = "Source Directories"
	description = "Delete all empty source directories."
	doFirst {
		sourceSets.each { def sourceRoot ->
			sourceRoot.allSource.srcDirTrees.each { def sourceDir ->
				if(sourceDir.dir.exists() && sourceDir.dir.isDirectory() && sourceDir.dir.list().length == 0) {
					println "Removing empty ${sourceDir}"
					sourceDir.dir.delete()
				}
			}
		}
	}
 
}

mainClassName = 'service.Server'